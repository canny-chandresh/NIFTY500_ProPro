name: Hourly Lean (Ingest ➜ Alphas ➜ Health ➜ Telegram)

on:
  # ⏱ Hourly during Indian market (Mon–Fri). Times are UTC.
  schedule:
    # 09:15–15:30 IST ≈ 03:45–10:00 UTC; we trigger at :45 each hour
    - cron: "45 3-9 * * 1-5"   # 09:45, 10:45, 11:45, 12:45, 13:45, 14:45, 15:45 IST
    # EOD/summary at 17:00 IST → 11:30 UTC
    - cron: "30 11 * * 1-5"
  # ▶ manual trigger
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    env:
      TZ: Asia/Kolkata
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy scikit-learn pyarrow fastparquet requests yfinance ta
          pip install feedparser vaderSentiment

      # (Optional) bootstrap datalake once if you uploaded a seed zip
      - name: Ensure datalake exists (unpack once)
        run: |
          if [ ! -d "datalake" ] && [ -f "datalake-bootstrap.zip" ]; then
            unzip -o datalake-bootstrap.zip -d .
            echo "Bootstrapped datalake from ZIP."
          fi
          mkdir -p reports/debug

      # ---------- Ingest (NSE-first with Yahoo fallback) ----------
      - name: Ingest daily+intraday+macro (lean)
        run: |
          python - <<'PY'
          import sys; sys.path.append("src")
          from config import CONFIG
          import data_ingest as di
          uni = CONFIG.get("universe", [])
          print(di.run_all(uni))
          PY

      # ---------- Options chain (NSE primary ➜ synthetic fallback) ----------
      - name: Options ingest (NSE primary)
        run: |
          python - <<'PY'
          import sys; sys.path.append("src")
          import options_ingest
          print(options_ingest.fetch_and_store())
          PY

      # ---------- Fast alphas so matrix is alive hourly ----------
      - name: Compute fast alphas
        run: |
          python - <<'PY'
          import sys; sys.path.append("src")
          import feature_store
          from alpha.runtime import run_enabled_alphas
          from config import CONFIG
          ff = feature_store.get_feature_frame(CONFIG.get("universe", []))
          out = run_enabled_alphas(ff, fast_only=True)
          print({"alpha_cols": [c for c in out.columns if c.startswith("alpha_")]})
          PY

      # ---------- Healthcheck + Telegram ping ----------
      - name: Healthcheck + Telegram
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID:  ${{ secrets.TG_CHAT_ID }}
        run: |
          python -m pip install --upgrade pip >/dev/null 2>&1
          python - <<'PY'
          import sys; sys.path.append("src")
          import healthcheck
          healthcheck.run(send_telegram=True)
          PY

      # ---------- EOD reports at 17:00 IST only ----------
      - name: EOD summary (only around 17:00 IST)
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID:  ${{ secrets.TG_CHAT_ID }}
        run: |
          python - <<'PY'
          import os, sys, datetime as dt
          sys.path.append("src")
          from config import CONFIG
          # Send only inside a 15-minute window around 17:00 IST
          ist = dt.datetime.utcnow() + dt.timedelta(hours=5, minutes=30)
          if ist.hour == 17 and ist.minute <= 15:
              try:
                  from entrypoints import eod_task
                  eod_task()
              except Exception as e:
                  print("EOD task error:", e)
          else:
              print("Skipping EOD (not in 17:00 IST window).")
          PY

      # ---------- Upload useful artifacts ----------
      - name: Upload health artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: hourly_artifacts
          path: |
            reports/**/*
            datalake/daily_hot.parquet
            datalake/intraday/5m/*.csv
            datalake/options/*.jsonl
            reports/debug/**
          if-no-files-found: warn
