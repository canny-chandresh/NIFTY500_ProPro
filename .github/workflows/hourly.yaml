name: Hourly / EOD / Weekly Orchestration

on:
  schedule:
    # Pre-open (IST ~09:00)  => UTC 03:30
    - cron: "30 3 * * 1-5"
    # Market hours (IST 09:30–15:30) => UTC 04:00–10:00 every 30 min
    - cron: "0,30 4-10 * * 1-5"
    # EOD compile (IST 17:00) => UTC 11:30
    - cron: "30 11 * * 1-5"
    # Weekly Saturday (IST morning ~10:00) => UTC 04:30 Sat
    - cron: "30 4 * * 6"
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11 with pip cache
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Bootstrap environment
        run: |
          chmod +x ./setup_env.sh || true
          bash ./setup_env.sh 3.11

      - name: Show repo tree (sanity)
        run: |
          echo "== repo root ==" && ls -la
          echo "== src ==" && ls -la src || true
          echo "== data dirs ==" && ls -la datalake || true

      - name: Import smoke test (non-fatal)
        run: |
          python - <<'PY'
          import sys; sys.path.append("src")
          mods = ["pipeline","features_builder","engine_registry","model_selector",
                  "news_ingest","fii_flows_live","hygiene_checks","feature_spec",
                  "options_live_multi","live_equity_alt","report_eod"]
          bad=[]
          for m in mods:
            try: __import__(m)
            except Exception as e: bad.append((m,repr(e)))
          print("Import check:", "OK" if not bad else bad)
          PY

      # Decide which phase based on cron time window (UTC)
      - name: Run hourly/market
        if: |
          github.event_name == 'workflow_dispatch' ||
          (startsWith(github.event.schedule, '0,30 4-10') || startsWith(github.event.schedule, '30 3'))
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID:  ${{ secrets.TG_CHAT_ID }}
        run: |
          python - <<'PY'
          import sys; sys.path.append("src")
          from pipeline import hourly_run
          print(hourly_run(top_k=5))
          PY

      - name: EOD compile & report
        if: github.event.schedule == '30 11 * * 1-5'
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID:  ${{ secrets.TG_CHAT_ID }}
        run: |
          python - <<'PY'
          import sys; sys.path.append("src")
          from pipeline import eod_run
          print(eod_run(top_k=5))
          PY

      - name: Weekly diagnostics
        if: github.event.schedule == '30 4 * * 6'
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID:  ${{ secrets.TG_CHAT_ID }}
        run: |
          python - <<'PY'
          import sys; sys.path.append("src")
          from pipeline import weekly_run
          print(weekly_run())
          PY

      - name: Month-end (light)
        if: github.event_name == 'workflow_dispatch'
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID:  ${{ secrets.TG_CHAT_ID }}
        run: |
          python - <<'PY'
          import sys, datetime as dt
          sys.path.append("src")
          from pipeline import monthend_run
          today = dt.date.today()
          import calendar
          if today.day == calendar.monthrange(today.year, today.month)[1]:
              print(monthend_run())
          else:
              print("Not month-end; skipping.")
          PY

      # Hygiene/spec checks also run inside the pipeline, but run again here to surface artifacts
      - name: Hygiene & Spec Reports (artifact)
        run: |
          echo "::group::List reports"
          ls -la reports || true
          ls -la reports/hygiene || true
          echo "::endgroup::"

      - name: Upload reports artifact
        uses: actions/upload-artifact@v4
        with:
          name: reports_bundle
          path: |
            reports/**
            datalake/paper_trades.csv
          if-no-files-found: warn
