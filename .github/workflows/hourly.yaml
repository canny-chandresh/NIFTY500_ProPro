name: Hourly Train & Daily Notify

on:
  workflow_dispatch: {}
  schedule:
    # PREOPEN primer ~09:05 IST == 03:35 UTC (Mon–Fri)
    - cron: "35 3 * * 1-5"

    # Hourly during NSE trading hours (roughly 09:15–15:30 IST)
    # 09:15–15:30 IST == 03:45–10:00 UTC; run at :15 past 04..09 UTC
    - cron: "15 4-9 * * 1-5"

    # Daily EOD at 17:00 IST == 11:30 UTC
    - cron: "30 11 * * 1-5"

    # Weekly (Saturday) 17:05 IST == 11:35 UTC
    - cron: "35 11 * * 6"

    # Month-end checker (runs daily at ~17:10 IST; code gates true month-end)
    - cron: "40 11 * * *"

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure datalake exists (unpack once)
        run: |
          if [ ! -d "datalake" ]; then
            echo "No datalake/ found; unpacking bootstrap ZIP…"
            if [ ! -f "datalake-bootstrap.zip" ]; then
              echo "⚠️ datalake-bootstrap.zip not found. Continuing."
            else
              sudo apt-get update -y >/dev/null 2>&1 || true
              sudo apt-get install -y unzip >/dev/null 2>&1 || true
              unzip -o datalake-bootstrap.zip -d .
              if [ -d "NIFTY500_ProPro/datalake" ]; then
                mv NIFTY500_ProPro/datalake ./ && rm -rf NIFTY500_ProPro
              fi
            fi
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (non-fatal)
        run: |
          python -m pip install --upgrade pip
          pip install pandas yfinance requests || true

      - name: Run gated jobs (preopen / hourly / EOD / weekly / month-end)
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID:  ${{ secrets.TG_CHAT_ID }}
          PYTHONPATH:  ${{ github.workspace }}/src
        run: |
          python - <<'PY'
          from entrypoints import preopen_primer, hourly_job, eod_task, periodic_reports_task
          from utils_time import (
              is_preopen_window_ist, should_send_now_ist,
              is_weekly_window_ist, is_month_end_after_hours_ist
          )

          print("== PREOPEN Check ==")
          if is_preopen_window_ist():
              preopen_primer()

          print("== HOURLY (might be gated) ==")
          hourly_job()

          print("== EOD Check ==")
          if should_send_now_ist(kind="eod"):
              print(eod_task())

          print("== Weekly Check ==")
          if is_weekly_window_ist():
              print(periodic_reports_task())

          print("== Monthly Check ==")
          if is_month_end_after_hours_ist():
              print(periodic_reports_task())
          PY
